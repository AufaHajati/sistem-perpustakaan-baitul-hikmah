// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

// Buat class Login, table userAccount & userPreference
// perlu buat table author & penerbit?

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model PetugasPerpustakaan {
  id   String @id
  nama String
}

model Buku {
  id            Int       @default(autoincrement())
  isbn          String
  judul         String
  genre         Genre[]
  halaman       Int?
  linkGambar    String?   @map("link_gambar")
  sinopsis      String?
  posisi        String?
  tanggalRusak  DateTime? @map("tanggal_rusak")
  tanggalHilang DateTime? @map("tanggal_hilang")

  idPenerbit Int
  penerbit   Penerbit @relation(fields: [idPenerbit], references: [id])

  bukuPinjaman  BukuPinjaman[]
  formBukti     FormBukti[]
  sumbanganBuku SumbanganBuku[]
  penulisBuku   PenulisBuku[]

  @@id([isbn, id])
  @@index([isbn, id])
}

model PenulisBuku {
  bukuISBN String
  bukuId   Int
  buku     Buku   @relation(fields: [bukuISBN, bukuId], references: [isbn, id])

  idPenulis Int
  penulis   Penulis @relation(fields: [idPenulis], references: [id])

  @@id([idPenulis, bukuISBN, bukuId])
  @@index([bukuISBN, bukuId, idPenulis])
}

model Penulis {
  id   Int    @id @default(autoincrement())
  nama String

  penulisBuku PenulisBuku[]

  @@index([id])
}

model Penerbit {
  id   Int    @id @default(autoincrement())
  nama String

  buku Buku[]

  @@index([id])
}

model Murid {
  nis          String       @id
  nama         String
  jenisKelamin JenisKelamin @map("jenis_kelamin")
  kontak       String
  alamat       String?

  FormBukti    FormBukti[]
  Peminjaman   Peminjaman[]
  riwayatKelas RiwayatKelas[]
  sumbangan    Sumbangan[]

  @@index([nis])
}

model Guru {
  nip          String       @id
  nama         String
  jenisKelamin JenisKelamin
  kontak       String
  alamat       String?
  sumbangan    Sumbangan[]
  peminjaman   Peminjaman[]

  @@index([nip])
}

model RiwayatKelas {
  tahunAjaran String

  muridNIS String
  murid    Murid  @relation(fields: [muridNIS], references: [nis])

  idKelas Int
  kelas   Kelas @relation(fields: [idKelas], references: [id])

  @@id([muridNIS, idKelas])
  @@index([muridNIS, idKelas])
}

model Kelas {
  id      Int    @id @default(autoincrement())
  nama    String
  tingkat Int

  RiwayatKelas RiwayatKelas[]

  @@index([id])
}

model FormBukti {
  id           Int      @id @default(autoincrement())
  tanggal      DateTime @default(now())
  halamanAwal  Int
  halamanAkhir Int
  intisari     String
  status       Boolean

  muridNIS String
  murid    Murid  @relation(fields: [muridNIS], references: [nis])

  bukuId   Int
  bukuISBN String
  Buku     Buku   @relation(fields: [bukuISBN, bukuId], references: [isbn, id])

  @@index([id])
}

model Peminjaman {
  id            Int      @id @default(autoincrement())
  tanggalPinjam DateTime @default(now())
  keterangan    String?

  bukuPinjaman BukuPinjaman[]

  nis   String? @map("murid_nis")
  murid Murid?  @relation(fields: [nis], references: [nis])

  nip  String? @map("guru_nip")
  guru Guru?   @relation(fields: [nip], references: [nip])

  @@index([id])
}

model BukuPinjaman {
  tanggalKembali DateTime?
  tenggatWaktu   DateTime

  denda Denda[]

  idPeminjaman Int
  peminjaman   Peminjaman @relation(fields: [idPeminjaman], references: [id])

  bukuISBN String
  bukuId   Int
  buku     Buku   @relation(fields: [bukuISBN, bukuId], references: [isbn, id])

  @@id([idPeminjaman, bukuISBN, bukuId])
  @@index([idPeminjaman, bukuISBN, bukuId])
}

model Keterangan {
  id             Int         @id @default(autoincrement())
  keterangan     String
  jumlahBuku     Int?
  totalNominal   Int?
  nominalPerHari Int?
  sumbangan      Sumbangan[]

  @@index([id])
}

model Denda {
  id      Int      @id @default(autoincrement())
  tanggal DateTime @default(now())

  bukuId       Int?
  bukuISBN     String?
  idPeminjaman Int?
  bukuPinjaman BukuPinjaman? @relation(fields: [idPeminjaman, bukuISBN, bukuId], references: [idPeminjaman, bukuISBN, bukuId])

  idSumbangan Int       @unique
  sumbangan   Sumbangan @relation(fields: [idSumbangan], references: [id])

  @@unique([idPeminjaman, bukuISBN, bukuId])
  @@index([idPeminjaman, bukuISBN, bukuId])
}

model Sumbangan {
  id             Int       @id @default(autoincrement())
  tanggalSelesai DateTime?
  berlebih       Boolean

  pembayaranTunai      PembayaranTunai[]
  riwayatBantuan       RiwayatBantuan[]
  sumbanganBuku        SumbanganBuku[]   @relation("sumbangan")
  sumbanganBukuBantuan SumbanganBuku[]   @relation("sumbanganBantuan")

  denda Denda?

  idKeterangan Int
  keterangan   Keterangan @relation(fields: [idKeterangan], references: [id])

  nis   String?
  murid Murid?  @relation(fields: [nis], references: [nis])

  nip  String?
  guru Guru?   @relation(fields: [nip], references: [nip])

  @@index([id])
}

model SumbanganBuku {
  tanggal DateTime @default(now())

  idSumbangan Int
  sumbangan   Sumbangan @relation("sumbangan", fields: [idSumbangan], references: [id])

  idSumbanganBantuan Int?
  sumbanganBantuan   Sumbangan? @relation("sumbanganBantuan", fields: [idSumbanganBantuan], references: [id])

  bukuId   Int
  bukuISBN String
  buku     Buku   @relation(fields: [bukuISBN, bukuId], references: [isbn, id])

  @@id([idSumbangan, bukuISBN, bukuId])
  @@index([idSumbangan, bukuISBN, bukuId])
}

model PembayaranTunai {
  id      Int      @id @default(autoincrement())
  tanggal DateTime @default(now())
  jumlah  Int

  riwayatBantuan RiwayatBantuan[]

  idSumbangan Int
  sumbangan   Sumbangan @relation(fields: [idSumbangan], references: [id])

  @@index([id])
}

model RiwayatBantuan {
  jumlah Int

  idPembayaranTunai Int
  pembayaranTunai   PembayaranTunai @relation(fields: [idPembayaranTunai], references: [id])

  idSumbangan Int
  sumbangan   Sumbangan @relation(fields: [idSumbangan], references: [id])

  @@id([idPembayaranTunai, idSumbangan])
  @@index([idPembayaranTunai, idSumbangan])
}

enum JenisKelamin {
  LAKI
  PEREMPUAN
}

enum Genre {
  FANTASY
  SCIFI
  MYSTERY
  BIOGRAPHY
  HISTORY
  ROMANCE
}

enum Posisi {
  A1
  B1
}

enum StatBuku {
  TERSEDIA
  HABIS
}

enum KetBuku {
  SUMBANGAN
  DENDA
}

enum StatDenda {
  TERLAMBAT
  HILANG
  RUSAK
}

enum KetDenda {
  DIBAYAR
  BELUM
}

enum Jumlah {
  RP500
  RP110000
  DUA_BUKU
}
